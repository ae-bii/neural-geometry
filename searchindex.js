Search.setIndex({"alltitles": {"Indices and tables": [[0, "indices-and-tables"]], "Welcome to nlgm\u2019s documentation!": [[0, "module-nlgm"]], "nlgm.autoencoder Module": [[1, "module-nlgm.autoencoder"]], "nlgm.graph_search_space Module": [[2, "module-nlgm.graph_search_space"]], "nlgm.manifolds Module": [[3, "module-nlgm.manifolds"]], "nlgm.optimizers Module": [[4, "module-nlgm.optimizers"]], "nlgm.train Module": [[5, "module-nlgm.train"]], "nlgm.visualize Module": [[6, "module-nlgm.visualize"]]}, "docnames": ["index", "nlgm.autoencoder", "nlgm.graph_search_space", "nlgm.manifolds", "nlgm.optimizers", "nlgm.train", "nlgm.visualize"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["index.rst", "nlgm.autoencoder.rst", "nlgm.graph_search_space.rst", "nlgm.manifolds.rst", "nlgm.optimizers.rst", "nlgm.train.rst", "nlgm.visualize.rst"], "indexentries": {"basicmanifold (class in nlgm.manifolds)": [[3, "nlgm.manifolds.BasicManifold", false]], "compute_weight() (in module nlgm.graph_search_space)": [[2, "nlgm.graph_search_space.compute_weight", false]], "construct_graph_search_space() (in module nlgm.graph_search_space)": [[2, "nlgm.graph_search_space.construct_graph_search_space", false]], "decoder (class in nlgm.autoencoder)": [[1, "nlgm.autoencoder.Decoder", false]], "distance() (nlgm.manifolds.basicmanifold method)": [[3, "nlgm.manifolds.BasicManifold.distance", false]], "distance() (nlgm.manifolds.euclideanmanifold method)": [[3, "nlgm.manifolds.EuclideanManifold.distance", false]], "distance() (nlgm.manifolds.hyperbolicmanifold method)": [[3, "nlgm.manifolds.HyperbolicManifold.distance", false]], "distance() (nlgm.manifolds.productmanifold method)": [[3, "nlgm.manifolds.ProductManifold.distance", false]], "distance() (nlgm.manifolds.sphericalmanifold method)": [[3, "nlgm.manifolds.SphericalManifold.distance", false]], "encoder (class in nlgm.autoencoder)": [[1, "nlgm.autoencoder.Encoder", false]], "euclideanmanifold (class in nlgm.manifolds)": [[3, "nlgm.manifolds.EuclideanManifold", false]], "exponential_map() (nlgm.manifolds.basicmanifold method)": [[3, "nlgm.manifolds.BasicManifold.exponential_map", false]], "exponential_map() (nlgm.manifolds.euclideanmanifold method)": [[3, "nlgm.manifolds.EuclideanManifold.exponential_map", false]], "exponential_map() (nlgm.manifolds.hyperbolicmanifold method)": [[3, "nlgm.manifolds.HyperbolicManifold.exponential_map", false]], "exponential_map() (nlgm.manifolds.productmanifold method)": [[3, "nlgm.manifolds.ProductManifold.exponential_map", false]], "exponential_map() (nlgm.manifolds.sphericalmanifold method)": [[3, "nlgm.manifolds.SphericalManifold.exponential_map", false]], "forward() (nlgm.autoencoder.decoder method)": [[1, "nlgm.autoencoder.Decoder.forward", false]], "forward() (nlgm.autoencoder.encoder method)": [[1, "nlgm.autoencoder.Encoder.forward", false]], "forward() (nlgm.autoencoder.geometricautoencoder method)": [[1, "nlgm.autoencoder.GeometricAutoencoder.forward", false]], "forward() (nlgm.autoencoder.imageautoencoder method)": [[1, "nlgm.autoencoder.ImageAutoEncoder.forward", false]], "geometricautoencoder (class in nlgm.autoencoder)": [[1, "nlgm.autoencoder.GeometricAutoencoder", false]], "hyperbolicmanifold (class in nlgm.manifolds)": [[3, "nlgm.manifolds.HyperbolicManifold", false]], "imageautoencoder (class in nlgm.autoencoder)": [[1, "nlgm.autoencoder.ImageAutoEncoder", false]], "manifold_to_curvature() (in module nlgm.graph_search_space)": [[2, "nlgm.graph_search_space.manifold_to_curvature", false]], "manifold_type() (in module nlgm.graph_search_space)": [[2, "nlgm.graph_search_space.manifold_type", false]], "module": [[0, "module-nlgm", false], [1, "module-nlgm.autoencoder", false], [2, "module-nlgm.graph_search_space", false], [3, "module-nlgm.manifolds", false], [4, "module-nlgm.optimizers", false], [5, "module-nlgm.train", false], [6, "module-nlgm.visualize", false]], "nlgm": [[0, "module-nlgm", false]], "nlgm.autoencoder": [[1, "module-nlgm.autoencoder", false]], "nlgm.graph_search_space": [[2, "module-nlgm.graph_search_space", false]], "nlgm.manifolds": [[3, "module-nlgm.manifolds", false]], "nlgm.optimizers": [[4, "module-nlgm.optimizers", false]], "nlgm.train": [[5, "module-nlgm.train", false]], "nlgm.visualize": [[6, "module-nlgm.visualize", false]], "normalize_graph() (nlgm.optimizers.randomwalkoptimizer method)": [[4, "nlgm.optimizers.RandomWalkOptimizer.normalize_graph", false]], "optimize() (nlgm.optimizers.randomwalkoptimizer method)": [[4, "nlgm.optimizers.RandomWalkOptimizer.optimize", false]], "optimize_with_backtracking() (nlgm.optimizers.randomwalkoptimizer method)": [[4, "nlgm.optimizers.RandomWalkOptimizer.optimize_with_backtracking", false]], "productmanifold (class in nlgm.manifolds)": [[3, "nlgm.manifolds.ProductManifold", false]], "randomwalkoptimizer (class in nlgm.optimizers)": [[4, "nlgm.optimizers.RandomWalkOptimizer", false]], "sphericalmanifold (class in nlgm.manifolds)": [[3, "nlgm.manifolds.SphericalManifold", false]], "test() (in module nlgm.autoencoder)": [[1, "nlgm.autoencoder.test", false]], "train() (in module nlgm.autoencoder)": [[1, "nlgm.autoencoder.train", false]], "train_and_evaluate() (in module nlgm.train)": [[5, "nlgm.train.train_and_evaluate", false]], "visualize_loss_trajectories() (in module nlgm.visualize)": [[6, "nlgm.visualize.visualize_loss_trajectories", false]], "visualize_optimization_trajectory() (in module nlgm.visualize)": [[6, "nlgm.visualize.visualize_optimization_trajectory", false]], "visualize_validation_metrics() (in module nlgm.visualize)": [[6, "nlgm.visualize.visualize_validation_metrics", false]]}, "objects": {"": [[0, 0, 0, "-", "nlgm"]], "nlgm": [[1, 0, 0, "-", "autoencoder"], [2, 0, 0, "-", "graph_search_space"], [3, 0, 0, "-", "manifolds"], [4, 0, 0, "-", "optimizers"], [5, 0, 0, "-", "train"], [6, 0, 0, "-", "visualize"]], "nlgm.autoencoder": [[1, 1, 1, "", "Decoder"], [1, 1, 1, "", "Encoder"], [1, 1, 1, "", "GeometricAutoencoder"], [1, 1, 1, "", "ImageAutoEncoder"], [1, 3, 1, "", "test"], [1, 3, 1, "", "train"]], "nlgm.autoencoder.Decoder": [[1, 2, 1, "", "forward"]], "nlgm.autoencoder.Encoder": [[1, 2, 1, "", "forward"]], "nlgm.autoencoder.GeometricAutoencoder": [[1, 2, 1, "", "forward"]], "nlgm.autoencoder.ImageAutoEncoder": [[1, 2, 1, "", "forward"]], "nlgm.graph_search_space": [[2, 3, 1, "", "compute_weight"], [2, 3, 1, "", "construct_graph_search_space"], [2, 3, 1, "", "manifold_to_curvature"], [2, 3, 1, "", "manifold_type"]], "nlgm.manifolds": [[3, 1, 1, "", "BasicManifold"], [3, 1, 1, "", "EuclideanManifold"], [3, 1, 1, "", "HyperbolicManifold"], [3, 1, 1, "", "ProductManifold"], [3, 1, 1, "", "SphericalManifold"]], "nlgm.manifolds.BasicManifold": [[3, 2, 1, "", "distance"], [3, 2, 1, "", "exponential_map"]], "nlgm.manifolds.EuclideanManifold": [[3, 2, 1, "", "distance"], [3, 2, 1, "", "exponential_map"]], "nlgm.manifolds.HyperbolicManifold": [[3, 2, 1, "", "distance"], [3, 2, 1, "", "exponential_map"]], "nlgm.manifolds.ProductManifold": [[3, 2, 1, "", "distance"], [3, 2, 1, "", "exponential_map"]], "nlgm.manifolds.SphericalManifold": [[3, 2, 1, "", "distance"], [3, 2, 1, "", "exponential_map"]], "nlgm.optimizers": [[4, 1, 1, "", "RandomWalkOptimizer"]], "nlgm.optimizers.RandomWalkOptimizer": [[4, 2, 1, "", "normalize_graph"], [4, 2, 1, "", "optimize"], [4, 2, 1, "", "optimize_with_backtracking"]], "nlgm.train": [[5, 3, 1, "", "train_and_evaluate"]], "nlgm.visualize": [[6, 3, 1, "", "visualize_loss_trajectories"], [6, 3, 1, "", "visualize_optimization_trajectory"], [6, 3, 1, "", "visualize_validation_metrics"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "terms": {"0": 2, "04810": 1, "1": 2, "10": 5, "2": [1, 2, 3], "20": 1, "2309": 1, "2d": 2, "4": 1, "A": [2, 3, 4, 5], "By": 1, "If": 2, "It": 2, "Its": 3, "The": [1, 2, 3, 4, 5], "With": 2, "accuraci": 1, "adjac": [2, 4, 6], "adjacency_matrix": [2, 6], "after": 4, "algorithm": [2, 4], "align": 2, "all": 2, "an": 2, "appendix": 1, "appli": 3, "arbitrari": 2, "architectur": 1, "arg": [1, 2, 3, 4, 5, 6], "arrai": 2, "arxiv": 1, "assum": [2, 3], "attribut": [3, 4], "auto": 1, "autoencod": 0, "backtrack": 4, "bar": 5, "base": [1, 2, 3], "base_point": 3, "basicmanifold": [0, 2, 3], "becaus": 2, "best": [2, 4], "between": [2, 3], "bipartit": 2, "bool": 5, "call": 4, "callback": 4, "character": 3, "choos": 2, "class": [1, 3, 4], "classif": 1, "common": 3, "compon": [2, 3], "comput": [2, 3], "compute_weight": [0, 2], "concaten": 3, "constant": 2, "construct": [2, 3], "construct_graph_search_spac": [0, 2], "contain": [1, 3, 4, 5], "convert": 2, "correspond": [2, 3, 4, 6], "cpu": 5, "criterion": 4, "cross": 1, "curvatur": [2, 3], "curvature_choic": 2, "d": 1, "data": [1, 5], "dataload": [1, 5], "dataset": 1, "decod": [0, 1], "default": [1, 2, 4, 5], "describ": 1, "devic": 5, "differ": [2, 6], "differenti": 3, "dimens": [1, 2, 3], "displai": 5, "distanc": [2, 3], "divid": 4, "dure": [5, 6], "each": [2, 3, 4, 6], "edg": 2, "effici": 2, "encod": [0, 1], "ensur": 2, "entropi": 1, "epoch": [1, 5], "euclidean": 3, "euclideanmanifold": [0, 3], "evalu": [5, 6], "evaluated_metr": 6, "evaluated_signatur": 6, "evolut": 6, "exactli": 2, "explor": 6, "exponenti": 3, "exponential_map": 3, "find": 2, "first": [2, 3], "fix": 1, "float": [2, 3], "formul": 2, "forward": 1, "from": [2, 3], "function": [1, 2, 4], "geodes": 3, "geometr": 1, "geometri": [2, 6], "geometricautoencod": [0, 1], "given": [1, 3, 4, 5], "gradient": 3, "graph": [2, 4, 6], "graph_search_spac": 0, "gromov": 2, "hausdorff": 2, "haustorff": 2, "have": 2, "helper": 2, "hidden_dim": 1, "http": 1, "hungarian": 2, "hyperbolicmanifold": [0, 3], "i": [2, 3], "identifi": 2, "imag": 1, "imageautoencod": [0, 1], "index": [0, 2], "input": [1, 3], "int": [1, 2, 3, 4, 5], "interfac": 3, "invers": 2, "iter": 4, "its": [3, 4], "latent": [2, 3], "latent_dim": 1, "latent_vector": 3, "list": [2, 3, 4, 5, 6], "loader": 5, "loss": [1, 4, 5, 6], "loss_trajectori": 6, "manifold": [0, 2], "manifold1": 2, "manifold2": 2, "manifold_to_curvatur": [0, 2], "manifold_typ": [0, 2], "map": 3, "match": [2, 3], "matrix": [2, 4, 6], "max_it": 4, "maximum": 4, "mean": 2, "method": 4, "metric": [4, 6], "minim": 2, "minimum": 2, "mismatch": 2, "model": [1, 2, 5], "modul": 0, "multipl": 3, "n_p": 2, "name": 1, "ndarrai": [4, 6], "nn": [1, 5], "node": [2, 4, 6], "none": [1, 3, 4], "normal": 4, "normalize_graph": 4, "note": [2, 3], "number": [1, 2, 4, 5], "numpi": [2, 4, 6], "object": [2, 3, 4], "obtain": 6, "one": 2, "optim": [0, 1, 2, 3, 6], "optimize_with_backtrack": 4, "option": [1, 4, 5], "org": 1, "origin": 3, "output": 1, "over": 1, "page": 0, "pair": 2, "pass": 1, "pdf": 1, "perfect": 2, "point": 3, "point_i": 3, "point_x": 3, "possibl": 2, "preserv": 3, "problem": 2, "process": 6, "product": [2, 3], "productmanifold": [0, 2, 3], "progress": 5, "progress_bar": 5, "project": 3, "provid": [1, 3], "pytorch": 1, "random": 4, "randomwalkoptim": [0, 4], "repres": [2, 3, 6], "result": 3, "return": [1, 2, 3, 4, 5], "row": 4, "search": [0, 2, 6], "second": [2, 3], "section": 1, "segment": 3, "should": [2, 3], "signatur": [1, 2, 4, 6], "solv": 2, "sourc": [1, 2, 3, 4, 5, 6], "space": [2, 3, 6], "specifi": 2, "sphericalmanifold": [0, 3], "start": 4, "str": [1, 2, 4], "sub": 0, "sum": [2, 3, 4], "tabl": 1, "tangent": 3, "tangent_vector": 3, "tensor": [1, 3], "test": [0, 1, 5], "test_load": 5, "them": 2, "thi": 2, "throughout": 2, "todo": 1, "torch": [1, 3, 5], "total": 2, "train": [0, 1], "train_and_evalu": [0, 5], "train_dataload": 1, "train_load": 5, "trajectori": 6, "true": 5, "tupl": [1, 2, 3, 4, 5], "two": [2, 3], "type": [2, 5], "us": [1, 2, 4, 5], "util": [1, 5], "val_dataload": 1, "valid": [1, 6], "vector": 3, "visual": 0, "visualize_loss_trajectori": [0, 6], "visualize_optimization_trajectori": [0, 6], "visualize_validation_metr": [0, 6], "wai": 2, "walk": 4, "want": 2, "we": 2, "weight": 2, "where": [2, 6], "whether": 5, "x": 1, "z": 1}, "titles": ["Welcome to <code class=\"docutils literal notranslate\"><span class=\"pre\">nlgm</span></code>\u2019s documentation!", "<code class=\"docutils literal notranslate\"><span class=\"pre\">nlgm.autoencoder</span></code> Module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">nlgm.graph_search_space</span></code> Module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">nlgm.manifolds</span></code> Module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">nlgm.optimizers</span></code> Module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">nlgm.train</span></code> Module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">nlgm.visualize</span></code> Module"], "titleterms": {"": 0, "autoencod": 1, "document": 0, "graph_search_spac": 2, "indic": 0, "manifold": 3, "modul": [1, 2, 3, 4, 5, 6], "nlgm": [0, 1, 2, 3, 4, 5, 6], "optim": 4, "tabl": 0, "train": 5, "visual": 6, "welcom": 0}})